[{"path":"https://ben18785.github.io/epidp/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 epidp authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://ben18785.github.io/epidp/articles/fitting_synthetic_data_including_covariates.html","id":"added-gaussian-noise-around-a-sinusoidal-covariate-driven-mean-r_t","dir":"Articles","previous_headings":"","what":"Added Gaussian noise around a sinusoidal covariate-driven mean RtR_t","title":"Fitting synthetic data including covariates","text":"first try estimate RtR_t without covariate information. now use Stan version EpiFilter estimate RtR_t profile. now overlay estimated RtR_t versus actual values. estimated RtR_t values coincide reasonably true values.","code":"# define sinusoidal Rt with noise rt_fun <- function(t, x) {   x[1] * exp(x[2]) } nt <- 200 t <- 1:nt f <- 1.3 + 1.2 * sin(4 * (pi / 180) * t) g <- vector(length = nt) g[1] <- rnorm(1, 0, 1) rho <- 0.8 for(i in 2:length(g)) {   g[i] <- rho * g[i - 1] + rnorm(1, 0, 0.1) } X <- matrix(c(f, g), nrow = length(f), ncol = 2)  # simulation parameters mean_si <- 6.5 sd_si <- 4.03 i_0 <- 10  # data frame of outputs epidemic_df <- simulate_renewal_epidemic(rt_fun, nt, mean_si, sd_si, i_0, X)  # plot epidemic_df %>%   mutate(f=f) %>%    select(-c(w_dist, lambda_t)) %>%   pivot_longer(c(R_t, f)) %>%   ggplot(aes(x = t, y = value, colour = name)) +   geom_line() +   scale_y_continuous(     name = \"Incidence (i_t)\",     sec.axis = sec_axis(~ . / 1000, name = \"Reproduction Number (R_t)\")   ) +   labs(x = \"Time\", colour = \"Variable\") +   theme_minimal() # fit model fit <- fit_epifilter(   N=length(epidemic_df$i_t),   C=epidemic_df$i_t,   w=epidemic_df$w_dist,   iter=200 ) #> Warning: The largest R-hat is NA, indicating chains have not mixed. #> Running the chains for more iterations may help. See #> https://mc-stan.org/misc/warnings.html#r-hat #> Warning: Bulk Effective Samples Size (ESS) is too low, indicating posterior means and medians may be unreliable. #> Running the chains for more iterations may help. See #> https://mc-stan.org/misc/warnings.html#bulk-ess #> Warning: Tail Effective Samples Size (ESS) is too low, indicating posterior variances and tail quantiles may be unreliable. #> Running the chains for more iterations may help. See #> https://mc-stan.org/misc/warnings.html#tail-ess  # look at MCMC summaries print(fit, c(\"sigma\", \"R\")) #> Inference for Stan model: epifilter. #> 4 chains, each with iter=200; warmup=100; thin=1;  #> post-warmup draws per chain=100, total post-warmup draws=400. #>  #>        mean se_mean   sd 2.5%  25%  50%  75% 97.5% n_eff Rhat #> sigma  0.18    0.00 0.02 0.14 0.17 0.18 0.20  0.22    56 1.06 #> R[1]   1.05    0.03 0.47 0.31 0.69 0.96 1.33  2.13   267 1.00 #> R[2]   1.05    0.03 0.44 0.34 0.73 1.00 1.31  2.03   277 1.00 #> R[3]   1.04    0.03 0.40 0.41 0.77 0.98 1.28  1.95   252 1.00 #> R[4]   1.02    0.02 0.37 0.42 0.75 0.99 1.24  1.94   284 1.00 #> R[5]   0.98    0.02 0.35 0.40 0.73 0.94 1.19  1.83   311 1.01 #> R[6]   1.00    0.02 0.34 0.48 0.76 0.95 1.20  1.80   283 1.01 #> R[7]   1.01    0.02 0.33 0.52 0.77 0.97 1.19  1.76   280 1.01 #> R[8]   1.04    0.02 0.33 0.51 0.79 1.01 1.24  1.73   291 1.00 #> R[9]   1.07    0.02 0.33 0.49 0.82 1.04 1.30  1.71   289 1.01 #> R[10]  1.14    0.02 0.34 0.51 0.89 1.12 1.37  1.83   320 1.00 #> R[11]  1.25    0.02 0.35 0.63 1.01 1.22 1.49  1.96   325 1.00 #> R[12]  1.39    0.02 0.37 0.73 1.12 1.38 1.61  2.15   406 1.00 #> R[13]  1.49    0.02 0.37 0.88 1.22 1.46 1.71  2.32   373 0.99 #> R[14]  1.51    0.02 0.38 0.81 1.24 1.50 1.73  2.33   381 1.00 #> R[15]  1.57    0.02 0.39 0.85 1.31 1.54 1.81  2.44   353 1.00 #> R[16]  1.64    0.02 0.40 0.87 1.37 1.61 1.88  2.46   435 1.00 #> R[17]  1.69    0.02 0.38 0.97 1.44 1.68 1.93  2.51   356 1.01 #> R[18]  1.74    0.02 0.37 1.02 1.50 1.70 1.98  2.47   375 1.00 #> R[19]  1.88    0.02 0.38 1.17 1.63 1.84 2.11  2.74   446 1.00 #> R[20]  2.11    0.02 0.39 1.38 1.83 2.09 2.37  2.91   385 1.00 #> R[21]  2.13    0.02 0.38 1.44 1.90 2.13 2.34  2.98   494 1.00 #> R[22]  2.07    0.02 0.37 1.38 1.82 2.05 2.31  2.88   463 1.01 #> R[23]  2.04    0.02 0.36 1.41 1.80 2.00 2.23  2.85   427 1.00 #> R[24]  2.10    0.01 0.35 1.46 1.85 2.07 2.34  2.84   564 1.00 #> R[25]  2.19    0.01 0.34 1.56 1.93 2.16 2.40  2.91   738 1.00 #> R[26]  2.19    0.01 0.34 1.59 1.94 2.19 2.44  2.85   572 1.00 #> R[27]  2.06    0.01 0.31 1.47 1.83 2.06 2.28  2.68   633 0.99 #> R[28]  2.05    0.01 0.29 1.52 1.86 2.02 2.24  2.61   665 0.99 #> R[29]  1.97    0.01 0.29 1.45 1.76 1.96 2.15  2.58   556 1.00 #> R[30]  1.94    0.01 0.27 1.41 1.76 1.93 2.12  2.46   508 1.00 #> R[31]  1.90    0.01 0.25 1.45 1.73 1.90 2.07  2.35   338 1.01 #> R[32]  2.02    0.01 0.26 1.55 1.82 2.01 2.20  2.57   488 1.01 #> R[33]  2.00    0.01 0.25 1.53 1.84 2.00 2.14  2.50   410 1.00 #> R[34]  1.95    0.01 0.24 1.55 1.79 1.92 2.11  2.42   424 1.01 #> R[35]  1.96    0.01 0.23 1.57 1.79 1.94 2.11  2.44   434 1.00 #> R[36]  1.80    0.01 0.22 1.43 1.64 1.79 1.93  2.32   548 1.00 #> R[37]  1.71    0.01 0.20 1.34 1.55 1.70 1.85  2.11   411 1.00 #> R[38]  1.60    0.01 0.19 1.26 1.48 1.59 1.72  1.95   420 1.00 #> R[39]  1.59    0.01 0.18 1.27 1.47 1.58 1.70  1.92   376 1.00 #> R[40]  1.45    0.01 0.16 1.13 1.34 1.46 1.55  1.79   452 0.99 #> R[41]  1.44    0.01 0.16 1.11 1.34 1.44 1.54  1.76   353 1.00 #> R[42]  1.39    0.01 0.15 1.11 1.28 1.39 1.50  1.66   427 0.99 #> R[43]  1.20    0.01 0.14 0.94 1.11 1.19 1.30  1.48   366 1.00 #> R[44]  1.18    0.01 0.14 0.94 1.09 1.17 1.27  1.46   328 1.01 #> R[45]  1.19    0.01 0.13 0.94 1.09 1.19 1.28  1.44   401 1.00 #> R[46]  1.26    0.01 0.14 1.00 1.15 1.26 1.35  1.54   440 1.00 #> R[47]  1.21    0.01 0.14 0.95 1.11 1.21 1.31  1.50   357 1.00 #> R[48]  1.38    0.01 0.16 1.12 1.27 1.37 1.49  1.72   281 1.01 #> R[49]  1.33    0.01 0.14 1.09 1.23 1.32 1.43  1.64   327 1.00 #> R[50]  1.10    0.01 0.12 0.88 1.03 1.09 1.17  1.35   450 1.00 #> R[51]  0.90    0.01 0.12 0.69 0.82 0.90 0.98  1.14   416 1.00 #> R[52]  0.79    0.01 0.11 0.58 0.71 0.79 0.85  1.01   430 0.99 #> R[53]  0.69    0.00 0.10 0.51 0.62 0.68 0.75  0.89   426 0.99 #> R[54]  0.61    0.01 0.10 0.44 0.54 0.60 0.68  0.81   303 1.01 #> R[55]  0.54    0.00 0.10 0.36 0.47 0.53 0.60  0.74   488 1.01 #> R[56]  0.58    0.00 0.10 0.40 0.52 0.58 0.64  0.78   508 0.99 #> R[57]  0.45    0.00 0.08 0.31 0.40 0.44 0.49  0.60   413 1.00 #> R[58]  0.35    0.00 0.07 0.23 0.30 0.35 0.40  0.50   428 1.00 #> R[59]  0.31    0.00 0.07 0.18 0.25 0.31 0.35  0.46   490 1.00 #> R[60]  0.34    0.00 0.08 0.20 0.29 0.33 0.38  0.52   550 1.00 #> R[61]  0.29    0.00 0.08 0.16 0.24 0.28 0.33  0.47   521 1.00 #> R[62]  0.21    0.00 0.06 0.11 0.17 0.21 0.25  0.34   471 1.00 #> R[63]  0.16    0.00 0.06 0.07 0.12 0.16 0.20  0.28   436 1.00 #> R[64]  0.14    0.00 0.05 0.05 0.10 0.13 0.18  0.25   504 1.00 #> R[65]  0.11    0.00 0.05 0.04 0.07 0.10 0.14  0.24   221 1.03 #> R[66]  0.09    0.00 0.05 0.02 0.05 0.08 0.12  0.21   211 1.02 #> R[67]  0.09    0.00 0.05 0.01 0.05 0.08 0.11  0.22   232 1.01 #> R[68]  0.11    0.00 0.06 0.02 0.06 0.10 0.14  0.24   223 1.02 #> R[69]  0.14    0.00 0.07 0.03 0.09 0.13 0.18  0.30   232 1.02 #> R[70]  0.16    0.01 0.09 0.04 0.10 0.15 0.21  0.38   182 1.02 #> R[71]  0.16    0.01 0.10 0.03 0.09 0.15 0.21  0.41   132 1.03 #> R[72]  0.18    0.01 0.10 0.03 0.10 0.16 0.23  0.42    97 1.04 #> R[73]  0.21    0.01 0.12 0.04 0.12 0.20 0.27  0.48   102 1.03 #> R[74]  0.22    0.02 0.12 0.04 0.13 0.21 0.28  0.51    62 1.05 #> R[75]  0.24    0.02 0.13 0.03 0.14 0.22 0.32  0.56    35 1.10 #> R[76]  0.27    0.03 0.15 0.03 0.15 0.24 0.35  0.63    35 1.12 #> R[77]  0.30    0.03 0.18 0.03 0.16 0.28 0.40  0.74    32 1.14 #> R[78]  0.35    0.03 0.21 0.05 0.20 0.31 0.45  0.86    37 1.12 #> R[79]  0.40    0.04 0.24 0.06 0.22 0.36 0.53  0.96    31 1.14 #> R[80]  0.46    0.05 0.26 0.08 0.26 0.43 0.62  1.02    32 1.14 #> R[81]  0.53    0.05 0.28 0.10 0.32 0.50 0.73  1.12    34 1.15 #> R[82]  0.60    0.05 0.31 0.13 0.38 0.56 0.79  1.30    42 1.13 #> R[83]  0.68    0.05 0.33 0.15 0.43 0.64 0.87  1.44    48 1.12 #> R[84]  0.77    0.05 0.35 0.19 0.51 0.74 0.97  1.57    45 1.12 #> R[85]  0.83    0.05 0.38 0.21 0.56 0.80 1.05  1.65    51 1.10 #> R[86]  0.89    0.05 0.39 0.23 0.62 0.86 1.13  1.78    58 1.08 #> R[87]  0.97    0.05 0.42 0.23 0.66 0.93 1.24  1.91    62 1.07 #> R[88]  1.04    0.05 0.43 0.30 0.72 1.01 1.34  2.02    63 1.07 #> R[89]  1.13    0.06 0.46 0.34 0.79 1.09 1.43  2.10    55 1.08 #> R[90]  1.23    0.06 0.47 0.39 0.90 1.21 1.52  2.21    69 1.07 #> R[91]  1.34    0.06 0.50 0.42 1.01 1.29 1.67  2.41    62 1.07 #> R[92]  1.45    0.06 0.51 0.54 1.12 1.40 1.78  2.55    83 1.07 #> R[93]  1.57    0.05 0.53 0.69 1.20 1.49 1.93  2.78    96 1.06 #> R[94]  1.72    0.05 0.59 0.73 1.28 1.67 2.02  3.11   129 1.04 #> R[95]  1.87    0.05 0.60 0.88 1.44 1.83 2.19  3.10   137 1.03 #> R[96]  1.96    0.05 0.63 0.90 1.52 1.89 2.34  3.33   136 1.04 #> R[97]  2.09    0.05 0.63 0.99 1.61 2.02 2.47  3.46   154 1.04 #> R[98]  2.14    0.04 0.59 1.13 1.71 2.09 2.55  3.35   185 1.03 #> R[99]  2.21    0.04 0.59 1.17 1.79 2.16 2.64  3.41   246 1.02 #> R[100] 2.29    0.04 0.59 1.29 1.89 2.19 2.66  3.59   206 1.03 #> R[101] 2.35    0.04 0.58 1.35 1.93 2.29 2.74  3.53   238 1.03 #> R[102] 2.47    0.04 0.58 1.50 2.06 2.44 2.85  3.72   238 1.02 #> R[103] 2.53    0.03 0.54 1.62 2.13 2.49 2.84  3.71   273 1.02 #> R[104] 2.57    0.03 0.51 1.67 2.21 2.55 2.93  3.66   349 1.01 #> R[105] 2.52    0.03 0.48 1.67 2.16 2.49 2.83  3.47   317 1.01 #> R[106] 2.50    0.03 0.46 1.71 2.18 2.45 2.80  3.51   262 1.01 #> R[107] 2.45    0.02 0.44 1.73 2.14 2.42 2.70  3.43   378 1.01 #> R[108] 2.45    0.02 0.42 1.70 2.17 2.42 2.71  3.38   344 1.01 #> R[109] 2.45    0.02 0.40 1.78 2.17 2.43 2.68  3.28   361 1.01 #> R[110] 2.43    0.02 0.39 1.75 2.18 2.42 2.68  3.27   452 1.00 #> R[111] 2.45    0.02 0.40 1.71 2.17 2.45 2.68  3.26   650 1.00 #> R[112] 2.47    0.01 0.38 1.68 2.25 2.47 2.72  3.19   664 0.99 #> R[113] 2.51    0.02 0.37 1.87 2.28 2.47 2.76  3.25   497 1.00 #> R[114] 2.57    0.01 0.35 1.90 2.33 2.55 2.80  3.18   603 0.99 #> R[115] 2.75    0.02 0.36 2.06 2.50 2.74 2.97  3.48   557 0.99 #> R[116] 2.80    0.02 0.34 2.16 2.57 2.80 3.01  3.50   486 1.00 #> R[117] 2.79    0.02 0.34 2.18 2.53 2.78 3.03  3.45   423 1.00 #> R[118] 2.75    0.02 0.31 2.18 2.55 2.76 2.96  3.38   400 0.99 #> R[119] 2.75    0.02 0.31 2.16 2.54 2.75 2.95  3.40   413 1.01 #> R[120] 2.70    0.02 0.31 2.13 2.47 2.68 2.92  3.29   421 1.00 #> R[121] 2.87    0.02 0.28 2.37 2.66 2.86 3.05  3.45   346 0.99 #> R[122] 2.78    0.01 0.26 2.30 2.63 2.77 2.94  3.27   363 1.00 #> R[123] 2.56    0.01 0.24 2.14 2.37 2.54 2.70  3.07   420 1.00 #> R[124] 2.61    0.01 0.24 2.15 2.45 2.59 2.77  3.09   366 1.00 #> R[125] 2.49    0.01 0.20 2.12 2.35 2.47 2.62  2.88   280 1.01 #> R[126] 2.48    0.01 0.22 2.08 2.32 2.46 2.63  2.90   324 1.02 #> R[127] 2.47    0.01 0.19 2.10 2.34 2.48 2.61  2.81   422 1.01 #> R[128] 2.25    0.01 0.17 1.90 2.13 2.25 2.36  2.57   402 0.99 #> R[129] 1.93    0.01 0.17 1.64 1.82 1.92 2.04  2.28   364 1.00 #> R[130] 1.92    0.01 0.16 1.63 1.80 1.91 2.03  2.26   346 1.00 #> R[131] 1.83    0.01 0.14 1.57 1.73 1.83 1.92  2.11   355 1.01 #> R[132] 1.63    0.01 0.13 1.36 1.54 1.62 1.72  1.88   377 1.00 #> R[133] 1.54    0.01 0.12 1.32 1.46 1.54 1.62  1.79   368 1.01 #> R[134] 1.35    0.01 0.11 1.16 1.27 1.35 1.43  1.58   485 1.00 #> R[135] 1.10    0.00 0.10 0.92 1.04 1.10 1.17  1.29   429 1.00 #> R[136] 1.06    0.00 0.09 0.90 0.99 1.05 1.11  1.24   388 1.00 #> R[137] 1.01    0.00 0.09 0.84 0.95 1.01 1.07  1.19   417 1.00 #> R[138] 0.83    0.00 0.08 0.68 0.78 0.83 0.89  0.98   438 0.99 #> R[139] 0.79    0.00 0.07 0.66 0.74 0.79 0.84  0.94   351 1.00 #> R[140] 0.87    0.00 0.08 0.72 0.81 0.87 0.92  1.03   422 1.00 #> R[141] 0.81    0.00 0.08 0.66 0.76 0.80 0.86  0.97   369 0.99 #> R[142] 0.73    0.00 0.08 0.58 0.67 0.73 0.78  0.89   348 1.00 #> R[143] 0.74    0.00 0.08 0.61 0.68 0.74 0.79  0.90   402 1.00 #> R[144] 0.70    0.00 0.07 0.58 0.65 0.70 0.75  0.86   383 1.00 #> R[145] 0.68    0.00 0.07 0.55 0.63 0.67 0.72  0.84   379 1.01 #> R[146] 0.63    0.00 0.07 0.50 0.58 0.63 0.67  0.77   489 0.99 #> R[147] 0.48    0.00 0.06 0.37 0.44 0.48 0.51  0.60   558 1.00 #> R[148] 0.38    0.00 0.06 0.28 0.34 0.38 0.41  0.50   426 1.00 #> R[149] 0.27    0.00 0.05 0.18 0.24 0.27 0.30  0.38   498 1.00 #> R[150] 0.30    0.00 0.06 0.20 0.26 0.29 0.34  0.42   494 1.00 #> R[151] 0.29    0.00 0.06 0.19 0.25 0.29 0.33  0.42   486 1.00 #> R[152] 0.23    0.00 0.05 0.14 0.19 0.23 0.26  0.33   376 1.00 #> R[153] 0.18    0.00 0.04 0.10 0.14 0.17 0.21  0.27   500 1.00 #> R[154] 0.19    0.00 0.05 0.10 0.15 0.18 0.21  0.31   676 1.00 #> R[155] 0.12    0.00 0.05 0.04 0.09 0.12 0.15  0.22   497 1.00 #> R[156] 0.11    0.00 0.05 0.04 0.07 0.10 0.14  0.21   460 1.00 #> R[157] 0.14    0.00 0.05 0.05 0.10 0.13 0.16  0.27   511 1.00 #> R[158] 0.14    0.00 0.05 0.05 0.10 0.13 0.17  0.25   460 1.01 #> R[159] 0.15    0.00 0.06 0.05 0.10 0.14 0.19  0.27   452 1.01 #> R[160] 0.17    0.00 0.06 0.07 0.12 0.16 0.21  0.31   433 1.00 #> R[161] 0.16    0.00 0.07 0.05 0.11 0.15 0.20  0.31   304 1.01 #> R[162] 0.18    0.00 0.08 0.06 0.12 0.17 0.23  0.36   366 1.00 #> R[163] 0.22    0.01 0.10 0.06 0.14 0.20 0.28  0.43   325 1.00 #> R[164] 0.31    0.01 0.12 0.12 0.22 0.29 0.38  0.59   383 1.00 #> R[165] 0.40    0.01 0.14 0.17 0.29 0.38 0.49  0.69   434 1.00 #> R[166] 0.45    0.01 0.16 0.19 0.34 0.44 0.55  0.81   350 1.00 #> R[167] 0.49    0.01 0.17 0.20 0.37 0.47 0.60  0.84   417 1.00 #> R[168] 0.52    0.01 0.19 0.18 0.39 0.51 0.64  0.87   247 1.00 #> R[169] 0.62    0.01 0.21 0.28 0.47 0.59 0.75  1.07   371 1.00 #> R[170] 0.73    0.01 0.22 0.34 0.59 0.71 0.86  1.19   347 0.99 #> R[171] 0.82    0.01 0.25 0.39 0.65 0.79 0.96  1.36   320 1.00 #> R[172] 0.90    0.01 0.25 0.48 0.72 0.88 1.07  1.46   327 1.00 #> R[173] 1.02    0.01 0.26 0.56 0.85 0.99 1.17  1.63   461 0.99 #> R[174] 1.07    0.01 0.29 0.59 0.86 1.05 1.24  1.70   484 0.99 #> R[175] 1.14    0.02 0.31 0.64 0.91 1.12 1.33  1.89   420 0.99 #> R[176] 1.22    0.02 0.31 0.68 1.01 1.20 1.42  1.84   418 0.99 #> R[177] 1.26    0.02 0.31 0.73 1.04 1.24 1.46  1.98   381 1.00 #> R[178] 1.25    0.02 0.31 0.70 1.04 1.23 1.45  1.88   408 1.00 #> R[179] 1.31    0.02 0.31 0.75 1.08 1.28 1.51  1.99   424 1.00 #> R[180] 1.38    0.01 0.32 0.86 1.15 1.34 1.57  2.09   464 1.00 #> R[181] 1.48    0.02 0.34 0.94 1.24 1.46 1.68  2.19   499 1.00 #> R[182] 1.63    0.01 0.35 1.04 1.39 1.63 1.84  2.41   539 1.00 #> R[183] 1.76    0.02 0.38 1.08 1.50 1.76 1.99  2.67   638 1.01 #> R[184] 2.01    0.02 0.38 1.32 1.76 1.98 2.26  2.83   484 1.01 #> R[185] 2.25    0.02 0.39 1.48 1.99 2.23 2.49  3.12   541 1.01 #> R[186] 2.37    0.02 0.40 1.63 2.11 2.32 2.60  3.18   460 1.00 #> R[187] 2.58    0.02 0.36 1.96 2.32 2.55 2.80  3.32   548 1.00 #> R[188] 2.78    0.02 0.36 2.15 2.53 2.78 3.01  3.50   508 1.00 #> R[189] 2.81    0.02 0.35 2.15 2.56 2.81 3.07  3.51   389 1.00 #> R[190] 2.85    0.02 0.36 2.22 2.57 2.83 3.12  3.52   396 1.00 #> R[191] 2.84    0.02 0.34 2.22 2.61 2.86 3.09  3.43   426 1.00 #> R[192] 2.95    0.02 0.32 2.32 2.73 2.95 3.16  3.54   402 1.01 #> R[193] 2.94    0.01 0.31 2.35 2.73 2.95 3.14  3.51   485 1.00 #> R[194] 2.94    0.01 0.29 2.36 2.76 2.96 3.13  3.44   444 1.00 #> R[195] 3.09    0.02 0.29 2.53 2.88 3.07 3.28  3.66   296 1.00 #> R[196] 3.15    0.02 0.27 2.63 2.97 3.12 3.33  3.67   246 1.01 #> R[197] 3.04    0.02 0.27 2.57 2.85 3.04 3.22  3.63   267 1.01 #> R[198] 3.26    0.01 0.27 2.69 3.08 3.25 3.43  3.77   377 1.00 #> R[199] 3.58    0.01 0.28 3.05 3.38 3.57 3.79  4.11   362 1.01 #> R[200] 3.83    0.02 0.30 3.33 3.64 3.81 4.02  4.42   344 1.02 #>  #> Samples were drawn using NUTS(diag_e) at Mon Aug 12 16:39:28 2024. #> For each parameter, n_eff is a crude measure of effective sample size, #> and Rhat is the potential scale reduction factor on split chains (at  #> convergence, Rhat=1). # extract posterior quantiles R_draws <- rstan::extract(fit, \"R\")[[1]] lower <- apply(R_draws, 2, function(x) quantile(x, 0.025)) middle <- apply(R_draws, 2, function(x) quantile(x, 0.5)) upper <- apply(R_draws, 2, function(x) quantile(x, 0.975))  # plot epidemic_df %>%    mutate(     lower=lower,     middle=middle,     upper=upper   ) %>%    select(t, R_t, lower, middle, upper) %>%    ggplot(aes(x=t, y=R_t)) +   geom_line(colour=\"red\") +   geom_ribbon(aes(ymin=lower, ymax=upper), fill=\"blue\", alpha=0.4) +   geom_line(aes(y=middle))"},{"path":"https://ben18785.github.io/epidp/articles/fitting_synthetic_data_using_epidp.html","id":"step-function-in-r_t","dir":"Articles","previous_headings":"","what":"Step function in RtR_t","title":"Fitting synthetic data using epidp","text":"first generate case data assuming step function RtR_t.  now use Stan version EpiFilter estimate maximum posteriori estimates RtR_t overlay top actual values. Note, estimates uncertainty associated benefit estimation instantaneous. estimates close actual RtR_t values initial period case counts low.","code":"rt_fun = function(t){   if(t <= 60)     R = 2   else if (t <= 90)     R = 0.5   else     R = 1   R }  # simulation parameters nt <- 200 mean_si <- 6.5 sd_si <- 4.03 i_0 <- 10  # data frame of outputs epidemic_df <- simulate_renewal_epidemic(rt_fun, nt, mean_si, sd_si, i_0)  # plot transform_factor <- 300 epidemic_df %>%   select(-c(w_dist, lambda_t)) %>%   mutate(R_t = R_t * transform_factor) %>%    pivot_longer(c(i_t, R_t)) %>%   ggplot(aes(x = t, y = value, colour = name)) +   geom_line() +   scale_y_continuous(     name = \"Incidence (i_t)\",     sec.axis = sec_axis(~ . / transform_factor, name = \"Reproduction Number (R_t)\")   ) +   labs(x = \"Time\") +   theme_minimal() +   scale_color_brewer(\"Series\", palette = \"Dark2\") # fit model fit <- fit_epifilter(   N=length(epidemic_df$i_t),   C=epidemic_df$i_t,   w=epidemic_df$w_dist,   is_sampling=FALSE,   as_vector=FALSE )  # plot R <- fit$par$R epidemic_df %>%    mutate(estimated=R) %>%    rename(true=R_t) %>%    select(t, estimated, true) %>%    pivot_longer(c(estimated, true)) %>%    ggplot(aes(x=t, y=value)) +   geom_line(aes(colour=name)) +   scale_color_brewer(\"R_t\", palette = \"Dark2\") +   ylab(\"R_t\")"},{"path":"https://ben18785.github.io/epidp/articles/fitting_synthetic_data_using_epidp.html","id":"sinusoidal-function-in-r_t","dir":"Articles","previous_headings":"","what":"Sinusoidal function in RtR_t","title":"Fitting synthetic data using epidp","text":"now generate case data assuming sinusoidal RtR_t.  now use Stan version EpiFilter estimate RtR_t profile. now overlay estimated RtR_t versus actual values. estimated RtR_t values coincide reasonably true values.","code":"# define sinusoidal Rt rt_fun <- function(t) {   1.3 + 1.2 * sin(4 * (pi / 180) * t) } nt <- 200 mean_si <- 6.5 sd_si <- 4.03 i_0 <- 10  # data frame of outputs epidemic_df <- simulate_renewal_epidemic(rt_fun, nt, mean_si, sd_si, i_0)  # plot transform_factor <- 150 epidemic_df %>%   select(-c(w_dist, lambda_t)) %>%   mutate(R_t = R_t * transform_factor) %>%    pivot_longer(c(i_t, R_t)) %>%   ggplot(aes(x = t, y = value, colour = name)) +   geom_line() +   scale_y_continuous(     name = \"Incidence (i_t)\",     sec.axis = sec_axis(~ . / transform_factor, name = \"Reproduction Number (R_t)\")   ) +   labs(x = \"Time\") +   theme_minimal() +   scale_color_brewer(\"Series\", palette = \"Dark2\") # fit model fit <- fit_epifilter(   N=length(epidemic_df$i_t),   C=epidemic_df$i_t,   w=epidemic_df$w_dist,   iter=200 ) #> Warning: The largest R-hat is NA, indicating chains have not mixed. #> Running the chains for more iterations may help. See #> https://mc-stan.org/misc/warnings.html#r-hat #> Warning: Bulk Effective Samples Size (ESS) is too low, indicating posterior means and medians may be unreliable. #> Running the chains for more iterations may help. See #> https://mc-stan.org/misc/warnings.html#bulk-ess #> Warning: Tail Effective Samples Size (ESS) is too low, indicating posterior variances and tail quantiles may be unreliable. #> Running the chains for more iterations may help. See #> https://mc-stan.org/misc/warnings.html#tail-ess  # look at MCMC summaries print(fit, c(\"sigma\", \"R\")) #> Inference for Stan model: epifilter. #> 4 chains, each with iter=200; warmup=100; thin=1;  #> post-warmup draws per chain=100, total post-warmup draws=400. #>  #>        mean se_mean   sd 2.5%  25%  50%  75% 97.5% n_eff Rhat #> sigma  0.14    0.00 0.01 0.12 0.13 0.14 0.14  0.17   107 1.03 #> R[1]   1.41    0.05 0.45 0.62 1.11 1.40 1.67  2.35    75 1.06 #> R[2]   1.42    0.05 0.41 0.64 1.17 1.43 1.66  2.28    68 1.07 #> R[3]   1.43    0.05 0.39 0.76 1.16 1.43 1.64  2.28    64 1.07 #> R[4]   1.43    0.04 0.37 0.78 1.17 1.41 1.66  2.19    82 1.06 #> R[5]   1.44    0.04 0.35 0.85 1.19 1.42 1.67  2.17   101 1.06 #> R[6]   1.50    0.04 0.33 0.90 1.26 1.46 1.72  2.18    69 1.07 #> R[7]   1.57    0.04 0.32 0.99 1.35 1.54 1.77  2.24    77 1.06 #> R[8]   1.62    0.03 0.33 1.03 1.42 1.58 1.81  2.32   106 1.05 #> R[9]   1.68    0.02 0.34 1.09 1.46 1.64 1.87  2.39   182 1.03 #> R[10]  1.76    0.03 0.33 1.20 1.54 1.74 1.96  2.48   168 1.03 #> R[11]  1.82    0.02 0.33 1.25 1.57 1.78 2.03  2.54   180 1.03 #> R[12]  1.84    0.02 0.31 1.31 1.63 1.81 2.07  2.46   258 1.02 #> R[13]  1.89    0.02 0.30 1.39 1.68 1.86 2.09  2.50   288 1.02 #> R[14]  1.97    0.02 0.32 1.43 1.74 1.94 2.19  2.61   351 1.01 #> R[15]  2.04    0.01 0.32 1.46 1.81 2.03 2.25  2.65   488 1.00 #> R[16]  2.08    0.02 0.32 1.48 1.87 2.06 2.29  2.75   451 1.00 #> R[17]  2.14    0.01 0.30 1.59 1.92 2.12 2.35  2.73   420 0.99 #> R[18]  2.22    0.01 0.28 1.70 2.02 2.21 2.40  2.76   457 0.99 #> R[19]  2.29    0.01 0.27 1.79 2.10 2.29 2.49  2.81   490 1.00 #> R[20]  2.40    0.01 0.27 1.88 2.23 2.40 2.55  3.02   551 1.00 #> R[21]  2.50    0.01 0.26 1.99 2.31 2.50 2.68  3.02   449 1.00 #> R[22]  2.63    0.01 0.27 2.14 2.44 2.60 2.81  3.18   496 0.99 #> R[23]  2.63    0.01 0.26 2.15 2.45 2.62 2.81  3.12   418 0.99 #> R[24]  2.62    0.01 0.26 2.15 2.46 2.61 2.78  3.19   415 1.00 #> R[25]  2.54    0.01 0.23 2.07 2.38 2.54 2.69  3.02   448 1.00 #> R[26]  2.52    0.01 0.21 2.14 2.36 2.52 2.66  2.97   672 1.00 #> R[27]  2.59    0.01 0.21 2.21 2.44 2.59 2.73  3.00   475 1.00 #> R[28]  2.45    0.01 0.21 2.07 2.32 2.44 2.60  2.86   599 0.99 #> R[29]  2.28    0.01 0.19 1.94 2.16 2.28 2.40  2.67   499 0.99 #> R[30]  2.21    0.01 0.17 1.90 2.09 2.20 2.31  2.56   417 1.00 #> R[31]  2.16    0.01 0.16 1.89 2.05 2.16 2.26  2.46   419 1.00 #> R[32]  2.11    0.01 0.15 1.82 2.01 2.10 2.20  2.46   472 1.00 #> R[33]  2.19    0.01 0.16 1.91 2.09 2.19 2.28  2.55   355 1.00 #> R[34]  2.08    0.01 0.15 1.82 1.98 2.07 2.19  2.36   414 1.00 #> R[35]  1.91    0.01 0.14 1.64 1.82 1.91 2.01  2.21   398 0.99 #> R[36]  1.87    0.01 0.13 1.62 1.78 1.85 1.96  2.12   303 1.00 #> R[37]  1.82    0.01 0.13 1.58 1.74 1.81 1.91  2.10   401 1.01 #> R[38]  1.84    0.01 0.12 1.61 1.77 1.85 1.92  2.06   429 0.99 #> R[39]  1.74    0.01 0.11 1.52 1.66 1.74 1.81  1.99   358 1.00 #> R[40]  1.59    0.00 0.10 1.39 1.52 1.58 1.65  1.79   405 1.00 #> R[41]  1.59    0.00 0.09 1.42 1.52 1.58 1.66  1.77   383 1.01 #> R[42]  1.50    0.00 0.10 1.32 1.43 1.50 1.57  1.69   491 1.00 #> R[43]  1.35    0.00 0.10 1.17 1.28 1.34 1.40  1.54   375 0.99 #> R[44]  1.47    0.00 0.09 1.29 1.41 1.47 1.54  1.66   392 0.99 #> R[45]  1.35    0.00 0.08 1.20 1.29 1.34 1.41  1.52   416 1.00 #> R[46]  1.37    0.00 0.09 1.22 1.32 1.37 1.43  1.54   463 0.99 #> R[47]  1.30    0.00 0.08 1.15 1.25 1.30 1.36  1.46   366 1.01 #> R[48]  1.14    0.00 0.07 1.00 1.09 1.13 1.19  1.29   414 0.99 #> R[49]  1.03    0.00 0.07 0.89 0.98 1.03 1.07  1.17   489 1.00 #> R[50]  0.89    0.00 0.07 0.76 0.84 0.89 0.94  1.02   379 1.00 #> R[51]  0.82    0.00 0.06 0.71 0.78 0.82 0.86  0.94   434 1.00 #> R[52]  0.79    0.00 0.06 0.66 0.75 0.79 0.83  0.90   407 1.00 #> R[53]  0.61    0.00 0.06 0.50 0.57 0.61 0.65  0.73   328 1.00 #> R[54]  0.60    0.00 0.06 0.50 0.56 0.60 0.64  0.72   683 1.00 #> R[55]  0.56    0.00 0.05 0.46 0.52 0.56 0.59  0.66   351 1.00 #> R[56]  0.45    0.00 0.05 0.36 0.43 0.45 0.48  0.54   458 0.99 #> R[57]  0.42    0.00 0.05 0.33 0.39 0.42 0.45  0.53   421 1.00 #> R[58]  0.34    0.00 0.04 0.26 0.31 0.34 0.37  0.42   432 1.00 #> R[59]  0.23    0.00 0.04 0.17 0.21 0.23 0.26  0.31   475 1.00 #> R[60]  0.22    0.00 0.04 0.16 0.19 0.22 0.24  0.30   482 1.00 #> R[61]  0.18    0.00 0.04 0.12 0.16 0.18 0.21  0.26   609 0.99 #> R[62]  0.17    0.00 0.03 0.12 0.15 0.17 0.20  0.24   599 0.99 #> R[63]  0.17    0.00 0.04 0.10 0.14 0.17 0.19  0.26   613 0.99 #> R[64]  0.12    0.00 0.03 0.07 0.10 0.12 0.14  0.19   575 1.00 #> R[65]  0.12    0.00 0.04 0.06 0.09 0.11 0.14  0.20   500 1.01 #> R[66]  0.09    0.00 0.03 0.04 0.07 0.09 0.11  0.17   374 1.01 #> R[67]  0.09    0.00 0.04 0.03 0.07 0.09 0.12  0.19   260 1.01 #> R[68]  0.13    0.00 0.05 0.05 0.09 0.12 0.15  0.24   294 1.00 #> R[69]  0.14    0.00 0.05 0.06 0.11 0.14 0.17  0.26   327 1.01 #> R[70]  0.17    0.00 0.06 0.06 0.13 0.16 0.21  0.30   336 1.01 #> R[71]  0.19    0.00 0.07 0.08 0.14 0.19 0.24  0.33   297 1.01 #> R[72]  0.24    0.00 0.08 0.11 0.18 0.23 0.30  0.43   294 1.00 #> R[73]  0.25    0.01 0.09 0.10 0.18 0.24 0.30  0.44   290 1.01 #> R[74]  0.28    0.01 0.10 0.11 0.21 0.26 0.34  0.51   293 0.99 #> R[75]  0.31    0.01 0.11 0.13 0.24 0.30 0.38  0.55   245 1.00 #> R[76]  0.36    0.01 0.12 0.18 0.29 0.34 0.43  0.62   266 0.99 #> R[77]  0.45    0.01 0.13 0.22 0.36 0.45 0.54  0.75   231 0.99 #> R[78]  0.54    0.01 0.15 0.29 0.45 0.53 0.62  0.90   236 1.00 #> R[79]  0.62    0.01 0.17 0.33 0.50 0.59 0.71  1.00   224 1.00 #> R[80]  0.67    0.01 0.17 0.38 0.56 0.66 0.77  1.06   218 1.00 #> R[81]  0.74    0.01 0.19 0.41 0.62 0.72 0.85  1.15   239 1.00 #> R[82]  0.83    0.01 0.21 0.45 0.69 0.82 0.95  1.30   230 0.99 #> R[83]  0.94    0.01 0.21 0.58 0.78 0.92 1.10  1.37   207 1.00 #> R[84]  1.03    0.01 0.23 0.63 0.86 1.01 1.18  1.53   267 0.99 #> R[85]  1.13    0.01 0.23 0.69 0.97 1.13 1.28  1.55   302 0.99 #> R[86]  1.23    0.01 0.26 0.72 1.05 1.24 1.40  1.77   333 0.99 #> R[87]  1.33    0.01 0.26 0.85 1.15 1.32 1.49  1.86   340 0.99 #> R[88]  1.40    0.01 0.27 0.86 1.24 1.40 1.58  1.96   342 1.00 #> R[89]  1.44    0.01 0.26 0.92 1.27 1.43 1.63  1.97   380 1.00 #> R[90]  1.50    0.01 0.26 1.03 1.32 1.48 1.67  2.00   351 1.00 #> R[91]  1.52    0.01 0.27 1.04 1.36 1.49 1.67  2.05   417 1.00 #> R[92]  1.50    0.01 0.26 1.04 1.33 1.50 1.66  2.03   412 1.00 #> R[93]  1.53    0.01 0.26 1.07 1.37 1.51 1.70  2.11   446 1.00 #> R[94]  1.58    0.01 0.26 1.13 1.40 1.55 1.75  2.13   532 1.00 #> R[95]  1.64    0.01 0.28 1.16 1.44 1.62 1.82  2.20   502 1.00 #> R[96]  1.70    0.01 0.28 1.21 1.51 1.68 1.88  2.30   526 1.00 #> R[97]  1.82    0.01 0.27 1.33 1.65 1.80 2.00  2.37   518 1.01 #> R[98]  1.88    0.01 0.26 1.37 1.70 1.86 2.04  2.41   469 1.00 #> R[99]  1.92    0.01 0.28 1.45 1.72 1.91 2.10  2.49   518 0.99 #> R[100] 1.94    0.01 0.27 1.43 1.75 1.96 2.13  2.44   492 1.00 #> R[101] 2.05    0.01 0.27 1.50 1.88 2.05 2.23  2.57   623 0.99 #> R[102] 2.13    0.01 0.26 1.64 1.94 2.12 2.31  2.63   580 0.99 #> R[103] 2.18    0.01 0.27 1.73 2.00 2.15 2.35  2.77   620 0.99 #> R[104] 2.26    0.01 0.24 1.82 2.08 2.23 2.45  2.76   583 1.00 #> R[105] 2.23    0.01 0.24 1.77 2.07 2.23 2.40  2.74   507 1.00 #> R[106] 2.20    0.01 0.23 1.75 2.05 2.20 2.37  2.63   538 0.99 #> R[107] 2.25    0.01 0.22 1.84 2.10 2.24 2.40  2.67   442 0.99 #> R[108] 2.40    0.01 0.22 2.01 2.25 2.40 2.54  2.83   509 0.99 #> R[109] 2.56    0.01 0.22 2.16 2.41 2.56 2.71  3.02   434 1.01 #> R[110] 2.58    0.01 0.20 2.18 2.45 2.58 2.72  3.01   395 0.99 #> R[111] 2.60    0.01 0.19 2.20 2.46 2.60 2.72  3.00   339 1.00 #> R[112] 2.42    0.01 0.19 2.05 2.27 2.42 2.54  2.81   391 1.01 #> R[113] 2.43    0.01 0.19 2.08 2.30 2.42 2.54  2.82   426 1.00 #> R[114] 2.52    0.01 0.17 2.16 2.40 2.51 2.64  2.86   377 0.99 #> R[115] 2.54    0.01 0.17 2.20 2.43 2.53 2.65  2.88   485 0.99 #> R[116] 2.51    0.01 0.15 2.22 2.40 2.50 2.60  2.82   277 1.00 #> R[117] 2.31    0.01 0.16 2.03 2.21 2.31 2.42  2.61   315 0.99 #> R[118] 2.41    0.01 0.14 2.16 2.32 2.41 2.51  2.71   380 1.00 #> R[119] 2.48    0.01 0.15 2.21 2.38 2.46 2.56  2.78   396 1.00 #> R[120] 2.32    0.01 0.12 2.08 2.25 2.33 2.40  2.56   422 1.00 #> R[121] 2.20    0.01 0.12 1.99 2.11 2.19 2.28  2.44   410 1.00 #> R[122] 2.19    0.01 0.11 2.00 2.12 2.19 2.27  2.43   409 1.00 #> R[123] 2.10    0.01 0.11 1.89 2.03 2.11 2.17  2.30   419 0.99 #> R[124] 2.07    0.01 0.10 1.90 2.01 2.07 2.13  2.28   358 1.00 #> R[125] 2.01    0.00 0.10 1.83 1.94 2.00 2.08  2.19   426 1.00 #> R[126] 1.90    0.00 0.09 1.74 1.84 1.90 1.96  2.07   361 1.00 #> R[127] 1.95    0.00 0.09 1.77 1.89 1.95 2.01  2.13   445 1.00 #> R[128] 1.89    0.00 0.08 1.75 1.84 1.89 1.95  2.06   308 1.00 #> R[129] 1.80    0.00 0.08 1.66 1.74 1.79 1.86  1.95   376 1.00 #> R[130] 1.75    0.00 0.08 1.60 1.70 1.74 1.80  1.90   382 1.00 #> R[131] 1.69    0.00 0.07 1.57 1.65 1.69 1.74  1.82   409 1.01 #> R[132] 1.49    0.00 0.06 1.37 1.45 1.49 1.53  1.62   381 1.00 #> R[133] 1.44    0.00 0.06 1.34 1.40 1.44 1.48  1.56   343 0.99 #> R[134] 1.31    0.00 0.06 1.19 1.28 1.32 1.35  1.42   432 1.00 #> R[135] 1.36    0.00 0.05 1.26 1.33 1.36 1.40  1.46   351 1.00 #> R[136] 1.29    0.00 0.05 1.19 1.26 1.29 1.33  1.40   375 1.00 #> R[137] 1.12    0.00 0.05 1.04 1.09 1.12 1.15  1.22   414 0.99 #> R[138] 1.02    0.00 0.05 0.94 0.99 1.02 1.05  1.12   329 1.00 #> R[139] 0.93    0.00 0.04 0.85 0.90 0.93 0.96  1.02   432 1.00 #> R[140] 0.86    0.00 0.04 0.78 0.84 0.86 0.90  0.95   406 0.99 #> R[141] 0.85    0.00 0.04 0.77 0.82 0.84 0.87  0.93   444 0.99 #> R[142] 0.80    0.00 0.04 0.72 0.77 0.80 0.82  0.88   318 1.01 #> R[143] 0.67    0.00 0.04 0.60 0.65 0.67 0.70  0.73   423 0.99 #> R[144] 0.61    0.00 0.03 0.55 0.59 0.62 0.64  0.68   424 0.99 #> R[145] 0.48    0.00 0.03 0.42 0.45 0.48 0.50  0.54   349 1.00 #> R[146] 0.42    0.00 0.03 0.36 0.40 0.41 0.43  0.47   441 1.00 #> R[147] 0.40    0.00 0.03 0.34 0.38 0.40 0.42  0.47   459 1.00 #> R[148] 0.37    0.00 0.03 0.31 0.35 0.37 0.39  0.42   381 1.00 #> R[149] 0.32    0.00 0.03 0.26 0.30 0.32 0.34  0.37   404 1.00 #> R[150] 0.26    0.00 0.03 0.21 0.24 0.25 0.27  0.31   257 1.00 #> R[151] 0.20    0.00 0.02 0.16 0.19 0.20 0.22  0.25   465 0.99 #> R[152] 0.21    0.00 0.03 0.16 0.19 0.20 0.23  0.26   517 1.00 #> R[153] 0.17    0.00 0.02 0.13 0.15 0.17 0.18  0.22   408 1.01 #> R[154] 0.13    0.00 0.02 0.09 0.12 0.13 0.15  0.17   519 1.00 #> R[155] 0.12    0.00 0.02 0.08 0.10 0.12 0.13  0.17   509 0.99 #> R[156] 0.09    0.00 0.02 0.05 0.07 0.08 0.10  0.13   587 1.00 #> R[157] 0.09    0.00 0.02 0.05 0.08 0.09 0.11  0.14   807 0.99 #> R[158] 0.11    0.00 0.03 0.06 0.09 0.11 0.12  0.16   566 1.00 #> R[159] 0.11    0.00 0.03 0.06 0.09 0.10 0.12  0.17   409 0.99 #> R[160] 0.10    0.00 0.03 0.05 0.08 0.10 0.12  0.17   423 0.99 #> R[161] 0.12    0.00 0.04 0.05 0.09 0.12 0.14  0.20   466 0.99 #> R[162] 0.12    0.00 0.04 0.05 0.09 0.12 0.15  0.20   455 0.99 #> R[163] 0.16    0.00 0.05 0.09 0.13 0.16 0.19  0.27   380 1.00 #> R[164] 0.17    0.00 0.05 0.08 0.14 0.17 0.21  0.27   349 1.01 #> R[165] 0.21    0.00 0.07 0.11 0.16 0.20 0.25  0.37   286 1.00 #> R[166] 0.22    0.00 0.07 0.10 0.17 0.21 0.27  0.39   362 1.00 #> R[167] 0.28    0.00 0.09 0.14 0.22 0.27 0.33  0.47   340 1.00 #> R[168] 0.33    0.01 0.10 0.17 0.25 0.32 0.39  0.55   371 1.00 #> R[169] 0.44    0.01 0.11 0.24 0.36 0.43 0.50  0.70   363 1.00 #> R[170] 0.49    0.01 0.13 0.27 0.40 0.48 0.56  0.76   345 1.00 #> R[171] 0.56    0.01 0.14 0.31 0.46 0.55 0.64  0.85   319 1.01 #> R[172] 0.65    0.01 0.15 0.35 0.54 0.65 0.75  0.98   301 1.00 #> R[173] 0.77    0.01 0.17 0.45 0.65 0.77 0.88  1.13   426 1.00 #> R[174] 0.89    0.01 0.18 0.58 0.76 0.89 1.01  1.24   495 1.00 #> R[175] 0.96    0.01 0.19 0.63 0.82 0.94 1.08  1.35   575 0.99 #> R[176] 1.05    0.01 0.20 0.70 0.91 1.02 1.18  1.43   548 0.99 #> R[177] 1.13    0.01 0.21 0.74 0.99 1.12 1.26  1.56   486 1.00 #> R[178] 1.19    0.01 0.21 0.83 1.04 1.18 1.32  1.64   465 0.99 #> R[179] 1.28    0.01 0.22 0.92 1.13 1.25 1.40  1.79   540 0.99 #> R[180] 1.30    0.01 0.21 0.92 1.15 1.30 1.45  1.75   524 1.00 #> R[181] 1.36    0.01 0.22 0.95 1.20 1.36 1.50  1.79   503 1.00 #> R[182] 1.47    0.01 0.24 1.02 1.32 1.46 1.62  1.97   570 1.00 #> R[183] 1.56    0.01 0.23 1.14 1.41 1.55 1.71  2.01   555 1.00 #> R[184] 1.68    0.01 0.24 1.25 1.51 1.68 1.83  2.17   583 1.00 #> R[185] 1.82    0.01 0.23 1.40 1.66 1.81 1.98  2.31   691 0.99 #> R[186] 1.85    0.01 0.23 1.44 1.67 1.85 2.00  2.30   675 0.99 #> R[187] 1.87    0.01 0.24 1.44 1.69 1.87 2.04  2.34   620 0.99 #> R[188] 1.96    0.01 0.24 1.53 1.80 1.97 2.13  2.40   663 0.99 #> R[189] 2.05    0.01 0.24 1.61 1.89 2.03 2.21  2.52   570 1.00 #> R[190] 2.02    0.01 0.23 1.60 1.85 2.01 2.18  2.52   568 0.99 #> R[191] 2.01    0.01 0.23 1.62 1.85 2.00 2.16  2.48   735 0.99 #> R[192] 2.03    0.01 0.22 1.64 1.89 2.01 2.17  2.46   764 0.99 #> R[193] 2.11    0.01 0.22 1.68 1.97 2.10 2.26  2.61   595 1.00 #> R[194] 2.23    0.01 0.21 1.83 2.09 2.23 2.36  2.70   482 1.00 #> R[195] 2.28    0.01 0.21 1.84 2.14 2.26 2.41  2.75   670 1.00 #> R[196] 2.35    0.01 0.21 1.99 2.22 2.34 2.49  2.77   540 0.99 #> R[197] 2.42    0.01 0.20 2.06 2.29 2.41 2.56  2.81   470 1.00 #> R[198] 2.30    0.01 0.19 1.92 2.17 2.29 2.43  2.68   469 0.99 #> R[199] 2.31    0.01 0.19 1.93 2.18 2.31 2.42  2.71   588 1.00 #> R[200] 2.20    0.01 0.20 1.83 2.06 2.19 2.33  2.62   447 0.99 #>  #> Samples were drawn using NUTS(diag_e) at Mon Aug 12 16:40:11 2024. #> For each parameter, n_eff is a crude measure of effective sample size, #> and Rhat is the potential scale reduction factor on split chains (at  #> convergence, Rhat=1). # extract posterior quantiles R_draws <- rstan::extract(fit, \"R\")[[1]] lower <- apply(R_draws, 2, function(x) quantile(x, 0.025)) middle <- apply(R_draws, 2, function(x) quantile(x, 0.5)) upper <- apply(R_draws, 2, function(x) quantile(x, 0.975))  # plot epidemic_df %>%    mutate(     lower=lower,     middle=middle,     upper=upper   ) %>%    select(t, R_t, lower, middle, upper) %>%    ggplot(aes(x=t, y=R_t)) +   geom_line(colour=\"red\") +   geom_ribbon(aes(ymin=lower, ymax=upper), fill=\"blue\", alpha=0.4) +   geom_line(aes(y=middle))"},{"path":"https://ben18785.github.io/epidp/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Ben Lambert. Author, maintainer. Kris Parag. Author.","code":""},{"path":"https://ben18785.github.io/epidp/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Lambert B, Parag K (2024). epidp: Estimating Epidemiological Parameters Interest Using Covariate Information. R package version 0.0.0.9000, https://ben18785.github.io/epidp/.","code":"@Manual{,   title = {epidp: Estimating Epidemiological Parameters Of Interest Using Covariate Information},   author = {Ben Lambert and Kris Parag},   year = {2024},   note = {R package version 0.0.0.9000},   url = {https://ben18785.github.io/epidp/}, }"},{"path":"https://ben18785.github.io/epidp/contributing-guidelines.html","id":null,"dir":"","previous_headings":"","what":"Contributing to EpiDP","title":"Contributing to EpiDP","text":"love input! want make contributing project easy transparent possible, whether ’s: Reporting bug Discussing current state code Submitting fix Proposing new features Becoming maintainer","code":""},{"path":"https://ben18785.github.io/epidp/contributing-guidelines.html","id":"we-develop-with-github","dir":"","previous_headings":"","what":"We Develop with Github","title":"Contributing to EpiDP","text":"use github host code, track issues feature requests, well accept pull requests.","code":""},{"path":"https://ben18785.github.io/epidp/contributing-guidelines.html","id":"we-use-github-flow-so-all-code-changes-happen-through-pull-requests","dir":"","previous_headings":"","what":"We Use Github Flow, So All Code Changes Happen Through Pull Requests","title":"Contributing to EpiDP","text":"Pull requests best way propose changes codebase (use Github Flow). actively welcome pull requests: Fork repo create branch main. ’ve added code tested, add tests. ’ve changed APIs, update documentation. Ensure test suite passes. Make sure code lints. Issue pull request!","code":""},{"path":"https://ben18785.github.io/epidp/contributing-guidelines.html","id":"any-contributions-you-make-will-be-under-the-mit-software-license","dir":"","previous_headings":"","what":"Any contributions you make will be under the MIT Software License","title":"Contributing to EpiDP","text":"short, submit code changes, submissions understood MIT License covers project. Feel free contact maintainers ’s concern.","code":""},{"path":"https://ben18785.github.io/epidp/contributing-guidelines.html","id":"report-bugs-using-githubs-issues","dir":"","previous_headings":"","what":"Report bugs using Github’s issues","title":"Contributing to EpiDP","text":"use GitHub issues track public bugs. Report bug opening new issue; ’s easy!","code":""},{"path":"https://ben18785.github.io/epidp/contributing-guidelines.html","id":"write-bug-reports-with-detail-background-and-sample-code","dir":"","previous_headings":"","what":"Write bug reports with detail, background, and sample code","title":"Contributing to EpiDP","text":"example bug report wrote, think ’s bad model. ’s another example Craig Hockenberry, app developer greatly respect. Great Bug Reports tend : quick summary /background specific! Give sample code can. stackoverflow question includes sample code anyone base R setup can run reproduce seeing expected happen actually happens Notes (possibly including think might happening, stuff tried didn’t work) People love thorough bug reports. ’m even kidding.","code":""},{"path":"https://ben18785.github.io/epidp/contributing-guidelines.html","id":"use-a-consistent-coding-style","dir":"","previous_headings":"","what":"Use a Consistent Coding Style","title":"Contributing to EpiDP","text":"’m borrowing Facebook’s Guidelines 2 spaces indentation rather tabs can try running npm run lint style unification","code":""},{"path":"https://ben18785.github.io/epidp/contributing-guidelines.html","id":"license","dir":"","previous_headings":"","what":"License","title":"Contributing to EpiDP","text":"contributing, agree contributions licensed MIT License.","code":""},{"path":"https://ben18785.github.io/epidp/contributing-guidelines.html","id":"references","dir":"","previous_headings":"","what":"References","title":"Contributing to EpiDP","text":"document adapted open-source contribution guidelines Facebook’s Draft","code":""},{"path":"https://ben18785.github.io/epidp/index.html","id":"epidp","dir":"","previous_headings":"","what":"Estimating Epidemiological Parameters Of Interest Using Covariate Information","title":"Estimating Epidemiological Parameters Of Interest Using Covariate Information","text":"goal epidp allow covariate information inform estimates time-varying reproduction number, RtR_t.","code":""},{"path":"https://ben18785.github.io/epidp/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Estimating Epidemiological Parameters Of Interest Using Covariate Information","text":"can install development version epidp GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"ben18785/epidp\")"},{"path":[]},{"path":"https://ben18785.github.io/epidp/index.html","id":"step-function-in-r_t","dir":"","previous_headings":"Example","what":"Step function in RtR_t","title":"Estimating Epidemiological Parameters Of Interest Using Covariate Information","text":"first generate case data assuming step function RtR_t.  now use Stan version EpiFilter estimate maximum posteriori estimates RtR_t overlay top actual values. Note, estimates uncertainty associated benefit estimation instantaneous. estimates close actual RtR_t values initial period case counts low.","code":"library(epidp) library(ggplot2) library(dplyr) #>  #> Attaching package: 'dplyr' #> The following objects are masked from 'package:stats': #>  #>     filter, lag #> The following objects are masked from 'package:base': #>  #>     intersect, setdiff, setequal, union library(magrittr) library(purrr) #>  #> Attaching package: 'purrr' #> The following object is masked from 'package:magrittr': #>  #>     set_names library(tidyr) #>  #> Attaching package: 'tidyr' #> The following object is masked from 'package:magrittr': #>  #>     extract  rt_fun = function(t){   if(t <= 60)     R = 2   else if (t <= 90)     R = 0.5   else     R = 1   R }  # simulation parameters nt <- 200 mean_si <- 6.5 sd_si <- 4.03 i_0 <- 10  # data frame of outputs epidemic_df <- simulate_renewal_epidemic(rt_fun, nt, mean_si, sd_si, i_0)  # plot transform_factor <- 300 epidemic_df %>%   select(-c(w_dist, lambda_t)) %>%   mutate(R_t = R_t * transform_factor) %>%    pivot_longer(c(i_t, R_t)) %>%   ggplot(aes(x = t, y = value, colour = name)) +   geom_line() +   scale_y_continuous(     name = \"Incidence (i_t)\",     sec.axis = sec_axis(~ . / transform_factor, name = \"Reproduction Number (R_t)\")   ) +   labs(x = \"Time\") +   theme_minimal() +   scale_color_brewer(\"Series\", palette = \"Dark2\") # fit model fit <- fit_epifilter(   N=length(epidemic_df$i_t),   C=epidemic_df$i_t,   w=epidemic_df$w_dist,   is_sampling=FALSE,   as_vector=FALSE )  # plot R <- fit$par$R epidemic_df %>%    mutate(estimated=R) %>%    rename(true=R_t) %>%    select(t, estimated, true) %>%    pivot_longer(c(estimated, true)) %>%    ggplot(aes(x=t, y=value)) +   geom_line(aes(colour=name)) +   scale_color_brewer(\"R_t\", palette = \"Dark2\") +   ylab(\"R_t\") +   xlab(\"Time\") +   theme_minimal()"},{"path":"https://ben18785.github.io/epidp/index.html","id":"contributing-guidelines","dir":"","previous_headings":"","what":"Contributing guidelines","title":"Estimating Epidemiological Parameters Of Interest Using Covariate Information","text":"welcome contributions collaborators. , ask read contributing guidelines section.","code":""},{"path":"https://ben18785.github.io/epidp/reference/fit_epifilter.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate the time-varying reproduction number from incidence data — fit_epifilter","title":"Estimate the time-varying reproduction number from incidence data — fit_epifilter","text":"Estimate time-varying reproduction number incidence data","code":""},{"path":"https://ben18785.github.io/epidp/reference/fit_epifilter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate the time-varying reproduction number from incidence data — fit_epifilter","text":"","code":"fit_epifilter(N, C, w, is_sampling = TRUE, ...)"},{"path":"https://ben18785.github.io/epidp/reference/fit_epifilter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate the time-varying reproduction number from incidence data — fit_epifilter","text":"N number data points C case counts w discretised serial interval is_sampling Boolean indicating sampling used (TRUE) optimisation (FALSE). Defaults TRUE ...","code":""},{"path":"https://ben18785.github.io/epidp/reference/fit_epifilter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate the time-varying reproduction number from incidence data — fit_epifilter","text":"stanfit object","code":""},{"path":"https://ben18785.github.io/epidp/reference/fit_epifilter_covariates.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate the time-varying reproduction number from incidence data using covariate data — fit_epifilter_covariates","title":"Estimate the time-varying reproduction number from incidence data using covariate data — fit_epifilter_covariates","text":"Estimate time-varying reproduction number incidence data using covariate data","code":""},{"path":"https://ben18785.github.io/epidp/reference/fit_epifilter_covariates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate the time-varying reproduction number from incidence data using covariate data — fit_epifilter_covariates","text":"","code":"fit_epifilter_covariates(N, C, w, X, ...)"},{"path":"https://ben18785.github.io/epidp/reference/fit_epifilter_covariates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate the time-varying reproduction number from incidence data using covariate data — fit_epifilter_covariates","text":"N number data points C case counts w discretised serial interval X matrix covariates (likely include first column 1s) dimensions N x (N_covariates + 1) ...","code":""},{"path":"https://ben18785.github.io/epidp/reference/fit_epifilter_covariates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate the time-varying reproduction number from incidence data using covariate data — fit_epifilter_covariates","text":"stanfit object","code":""},{"path":"https://ben18785.github.io/epidp/reference/generate_vector_serial.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a Discretized Serial Interval Distribution — generate_vector_serial","title":"Generate a Discretized Serial Interval Distribution — generate_vector_serial","text":"function generates discretized serial interval distribution based gamma distribution characterized specified mean standard deviation.","code":""},{"path":"https://ben18785.github.io/epidp/reference/generate_vector_serial.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a Discretized Serial Interval Distribution — generate_vector_serial","text":"","code":"generate_vector_serial(nt, mean_si, sd_si)"},{"path":"https://ben18785.github.io/epidp/reference/generate_vector_serial.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a Discretized Serial Interval Distribution — generate_vector_serial","text":"nt integer specifying number time points (length distribution). mean_si numeric value representing mean serial interval distribution. sd_si numeric value representing standard deviation serial interval distribution.","code":""},{"path":"https://ben18785.github.io/epidp/reference/generate_vector_serial.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a Discretized Serial Interval Distribution — generate_vector_serial","text":"numeric vector length nt representing discretized serial interval distribution.","code":""},{"path":"https://ben18785.github.io/epidp/reference/generate_vector_serial.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generate a Discretized Serial Interval Distribution — generate_vector_serial","text":"serial interval distribution discretized using gamma distribution shape scale parameters derived specified mean standard deviation. discretization performed computing difference cumulative distribution function (CDF) gamma distribution successive integer time points.","code":""},{"path":"https://ben18785.github.io/epidp/reference/generate_vector_serial.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate a Discretized Serial Interval Distribution — generate_vector_serial","text":"","code":"if (FALSE) { # \\dontrun{ generate_vector_serial(10, 5, 2) } # }"},{"path":"https://ben18785.github.io/epidp/reference/simulate_renewal_epidemic.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate a Renewal Epidemic Model — simulate_renewal_epidemic","title":"Simulate a Renewal Epidemic Model — simulate_renewal_epidemic","text":"function simulates epidemic using renewal model based specified time-varying reproduction number (Rt), serial interval distribution characterized gamma distribution, initial number cases.","code":""},{"path":"https://ben18785.github.io/epidp/reference/simulate_renewal_epidemic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate a Renewal Epidemic Model — simulate_renewal_epidemic","text":"","code":"simulate_renewal_epidemic(Rt_fun, nt, mean_si, sd_si, i_0, X = NULL)"},{"path":"https://ben18785.github.io/epidp/reference/simulate_renewal_epidemic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate a Renewal Epidemic Model — simulate_renewal_epidemic","text":"nt integer specifying number time points (duration epidemic simulation). mean_si numeric value representing mean serial interval distribution. sd_si numeric value representing standard deviation serial interval distribution. i_0 integer specifying initial number cases time point 1. X optional matrix covariates nt rows. rt_fun function takes vector time points returns vector reproduction numbers (Rt) corresponding time points.","code":""},{"path":"https://ben18785.github.io/epidp/reference/simulate_renewal_epidemic.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate a Renewal Epidemic Model — simulate_renewal_epidemic","text":"list containing following components: i_t numeric vector incidence new cases time point. lambda_t numeric vector total infectiousness time point. w_dist numeric vector discretized serial interval distribution. r_t numeric vector reproduction number (Rt) time point. t numeric vector time points 1 nt.","code":""},{"path":"https://ben18785.github.io/epidp/reference/simulate_renewal_epidemic.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Simulate a Renewal Epidemic Model — simulate_renewal_epidemic","text":"renewal model common approach simulating spread infectious diseases. total infectiousness time point computed convolution past incidence serial interval distribution. incidence time point simulated Poisson random variable mean equal product total infectiousness time-varying reproduction number.","code":""},{"path":"https://ben18785.github.io/epidp/reference/simulate_renewal_epidemic.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulate a Renewal Epidemic Model — simulate_renewal_epidemic","text":"","code":"if (FALSE) { # \\dontrun{ rt_fun <- function(t) { 1.5 * exp(-0.05 * t) } simulate_renewal_epidemic(rt_fun, 100, 5, 2, 10) } # }"}]
