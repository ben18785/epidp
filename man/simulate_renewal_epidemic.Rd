% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/simulation.R
\name{simulate_renewal_epidemic}
\alias{simulate_renewal_epidemic}
\title{Simulate a Renewal Epidemic Model}
\usage{
simulate_renewal_epidemic(Rt_fun, nt, mean_si, sd_si, i_0, X = NULL)
}
\arguments{
\item{Rt_fun}{A function that takes a vector of time points and returns a vector
of reproduction numbers (Rt) corresponding to those time points.}

\item{nt}{An integer specifying the number of time points (duration of the epidemic simulation).}

\item{mean_si}{A numeric value representing the mean of the serial interval distribution.}

\item{sd_si}{A numeric value representing the standard deviation of the serial interval distribution.}

\item{i_0}{An integer specifying the initial number of cases at time point 1.}

\item{X}{An optional matrix of covariates with \code{nt} rows.}
}
\value{
A list containing the following components:
\describe{
\item{i_t}{A numeric vector of the incidence of new cases at each time point.}
\item{lambda_t}{A numeric vector of the total infectiousness at each time point.}
\item{w_dist}{A numeric vector of the discretized serial interval distribution.}
\item{r_t}{A numeric vector of the reproduction number (Rt) at each time point.}
\item{t}{A numeric vector of the time points from 1 to nt.}
}
}
\description{
This function simulates an epidemic using a renewal model based on the
specified time-varying reproduction number (Rt), the serial interval distribution
characterized by a gamma distribution, and an initial number of cases.
}
\details{
The renewal model is a common approach for simulating the spread of infectious diseases.
The total infectiousness at each time point is computed as the convolution of past incidence
with the serial interval distribution. The incidence at each time point is then simulated
as a Poisson random variable with a mean equal to the product of the total infectiousness and
the time-varying reproduction number.
}
\examples{
rt_fun <- function(t) {
  1.5 * exp(-0.05 * t)
}
simulate_renewal_epidemic(rt_fun, 100, 5, 2, 10)
}
